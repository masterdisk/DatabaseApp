{"remainingRequest":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\babel-loader\\lib\\index.js!C:\\devilbox\\data\\www\\dbapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\devilbox\\data\\www\\dbapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\devilbox\\data\\www\\dbapp\\src\\components\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\devilbox\\data\\www\\dbapp\\src\\components\\Table.vue","mtime":1621327657750},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1618480263168},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1618480262416},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1618480263168},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiQzovZGV2aWxib3gvZGF0YS93d3cvZGJhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZiI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJDOi9kZXZpbGJveC9kYXRhL3d3dy9kYmFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnZhbHVlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBWdWVUYWJsZUR5bmFtaWMgZnJvbSAndnVlLXRhYmxlLWR5bmFtaWMnOwppbXBvcnQgRXZlbnRTZXJ2aWNlIGZyb20gJ0Avc2VydmljZXMvRXZlbnRTZXJ2aWNlLmpzJzsKaW1wb3J0IHsganNQREYgfSBmcm9tICJqc3BkZiI7CmltcG9ydCBleHBvcnRGcm9tSlNPTiBmcm9tICdleHBvcnQtZnJvbS1qc29uJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUYWJsZUZhbWlsaWVzJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGFyYW1zOiB7CiAgICAgICAgZGF0YTogW1snT3JnYW5pemF0aW9uTmFtZScsICdPcmdhbml6YXRpb25VUkwnLCAnTG9jYXRpb24nLCAnRGVzY3JpcHRpb24nLCAiV2Vic2l0ZSIsICJFbWFpbCIsICJQaG9uZSIsICJTdGF0dXMiLCAiSW5kdXN0cnkiLCAiU3RhZ2VzIiwgIkNvbXBhbnlJbnZlc3RlZCJdXSwKICAgICAgICBoZWFkZXI6ICdyb3cnLAogICAgICAgIGJvcmRlcjogdHJ1ZSwKICAgICAgICBzdHJpcGU6IHRydWUsCiAgICAgICAgaGVpZ2h0OiAyMDAsCiAgICAgICAgZW5hYmxlU2VhcmNoOiB0cnVlLAogICAgICAgIHBhZ2luYXRpb246IHRydWUsCiAgICAgICAgcGFnZVNpemU6IDEwLAogICAgICAgIHBhZ2VTaXplczogWzUsIDEwLCAyMCwgNTBdLAogICAgICAgIHNvcnQ6IFswXSwKICAgICAgICBzaG93Q2hlY2s6IHRydWUsCiAgICAgICAgY29sdW1uV2lkdGg6IFt7CiAgICAgICAgICBjb2x1bW46IDAsCiAgICAgICAgICB3aWR0aDogMTYwCiAgICAgICAgfSwgewogICAgICAgICAgY29sdW1uOiAxLAogICAgICAgICAgd2lkdGg6IDE2MAogICAgICAgIH0sIHsKICAgICAgICAgIGNvbHVtbjogMiwKICAgICAgICAgIHdpZHRoOiAxNjAKICAgICAgICB9LCB7CiAgICAgICAgICBjb2x1bW46IDMsCiAgICAgICAgICB3aWR0aDogMTYwCiAgICAgICAgfSwgewogICAgICAgICAgY29sdW1uOiA0LAogICAgICAgICAgd2lkdGg6IDE2MAogICAgICAgIH0sIHsKICAgICAgICAgIGNvbHVtbjogNSwKICAgICAgICAgIHdpZHRoOiAxNjAKICAgICAgICB9LCB7CiAgICAgICAgICBjb2x1bW46IDYsCiAgICAgICAgICB3aWR0aDogMTYwCiAgICAgICAgfSwgewogICAgICAgICAgY29sdW1uOiA3LAogICAgICAgICAgd2lkdGg6IDE2MAogICAgICAgIH0sIHsKICAgICAgICAgIGNvbHVtbjogOCwKICAgICAgICAgIHdpZHRoOiAxNjAKICAgICAgICB9LCB7CiAgICAgICAgICBjb2x1bW46IDksCiAgICAgICAgICB3aWR0aDogMTYwCiAgICAgICAgfSwgewogICAgICAgICAgY29sdW1uOiAxMCwKICAgICAgICAgIHdpZHRoOiAxNjAKICAgICAgICB9LCB7CiAgICAgICAgICBjb2x1bW46IDExLAogICAgICAgICAgd2lkdGg6IDE2MAogICAgICAgIH1dCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREYXRhYmFzZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldERhdGFiYXNlID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAgIHZhciBhY2Nlc3NUb2tlbiwgZGF0YSwgaTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRhdXRoLmdldFRva2VuU2lsZW50bHkoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgYWNjZXNzVG9rZW4gPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gRXZlbnRTZXJ2aWNlLmdldERhdGEoYWNjZXNzVG9rZW4pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGkgPSAxOwogICAgICAgICAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICAgICAgICAgIHZhciByb3cgPSBPYmplY3QudmFsdWVzKGVsZW1lbnQpOwogICAgICAgICAgICAgICAgICByb3cuc2hpZnQoKTsKCiAgICAgICAgICAgICAgICAgIF90aGlzLnBhcmFtcy5kYXRhLnNwbGljZShpLCAwLCByb3cpOwoKICAgICAgICAgICAgICAgICAgaSsrOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXREYXRhYmFzZSgpIHsKICAgICAgICByZXR1cm4gX2dldERhdGFiYXNlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXREYXRhYmFzZTsKICAgIH0oKSwKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEoKSB7CiAgICAgIHZhciBkYXRhID0gdGhpcy4kcmVmcy50YWJsZS5nZXREYXRhKCk7CiAgICAgIGRhdGEuc2hpZnQoKTsKICAgICAgdmFyIHNvbWVEYXRhID0gW107CiAgICAgIHZhciBmaW5hbERhdGEgPSBbXTsKICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgdmFyIHRlbXBzcyA9IFt7CiAgICAgICAgICBPcmdhbml6YXRpb25OYW1lOiBlbGVtZW50WzBdLAogICAgICAgICAgT3JnYW5pemF0aW9uVVJMOiBlbGVtZW50WzFdLAogICAgICAgICAgTG9jYXRpb246IGVsZW1lbnRbMl0sCiAgICAgICAgICBEZXNjcmlwdGlvbjogZWxlbWVudFszXSwKICAgICAgICAgIFdlYnNpdGU6IGVsZW1lbnRbNF0sCiAgICAgICAgICBFbWFpbDogZWxlbWVudFs1XSwKICAgICAgICAgIFBob25lOiBlbGVtZW50WzZdLAogICAgICAgICAgU3RhdHVzOiBlbGVtZW50WzddLAogICAgICAgICAgSW5kdXN0cnk6IGVsZW1lbnRbOF0sCiAgICAgICAgICBTdGFnZXM6IGVsZW1lbnRbOV0sCiAgICAgICAgICBDb21wYW55SW52ZXN0ZWQ6IGVsZW1lbnRbMTBdCiAgICAgICAgfV07IC8vIGNvbnNvbGUubG9nKHRlbXBzcykKCiAgICAgICAgc29tZURhdGEucHVzaCh0ZW1wc3MpOwogICAgICB9KTsgLy9oZWFkZXIgLSBjb2x1bW5zIGZvciB0aGUgZXhwb3J0IG9mIHRoZSBwZGYKCiAgICAgIHZhciBoZWFkZXJzID0gWydPcmdhbml6YXRpb25OYW1lJywgJ09yZ2FuaXphdGlvblVSTCcsICdMb2NhdGlvbicsICdEZXNjcmlwdGlvbicsICdXZWJzaXRlJywgJ0VtYWlsJywgJ1Bob25lJywgJ1N0YXR1cycsICdJbmR1c3RyeScsICdTdGFnZXMnLCAnQ29tcGFueUludmVzdGVkJ107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGhlYWRlcnMubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICBmaW5hbERhdGEucHVzaChzb21lRGF0YVtpXVswXSk7CiAgICAgIH0KCiAgICAgIHZhciB0ZXN0ID0gbmV3IGpzUERGKCdsYW5kc2NhcGUnLCAncHgnLCBbMjYwMCwgNjAwXSk7CiAgICAgIHRlc3QudGFibGUoNSwgMSwgZmluYWxEYXRhLCBoZWFkZXJzLCB7CiAgICAgICAgYXV0b1NpemU6IHRydWUsCiAgICAgICAgZm9udFNpemU6IDEwLAogICAgICAgIHBhZGRpbmc6IDUsCiAgICAgICAgbWFyZ2luczogMTAKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKCJkYXRhOiIgKyBkYXRhKTsKICAgICAgdGVzdC5zYXZlKCJzc3NzLnBkZiIpOwogICAgfSwKICAgIGdldFhMUzogZnVuY3Rpb24gZ2V0WExTKCkgewogICAgICB2YXIgZGF0YSA9IHRoaXMuJHJlZnMudGFibGUuZ2V0RGF0YSgpOwogICAgICB2YXIgZmlsZU5hbWUgPSAnZG93bmxvYWQnOwogICAgICB2YXIgZXhwb3J0VHlwZSA9ICdjc3YnOwogICAgICBleHBvcnRGcm9tSlNPTih7CiAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICBmaWxlTmFtZTogZmlsZU5hbWUsCiAgICAgICAgZXhwb3J0VHlwZTogZXhwb3J0VHlwZQogICAgICB9KTsKICAgIH0sCiAgICBnZXRYTFNjaGVja2VkOiBmdW5jdGlvbiBnZXRYTFNjaGVja2VkKCkgewogICAgICBpZiAodGhpcy4kcmVmcyAmJiB0aGlzLiRyZWZzLnRhYmxlKSB7CiAgICAgICAgdmFyIGhlYWRlcnMgPSBbJ09yZ2FuaXphdGlvbk5hbWUnLCAnT3JnYW5pemF0aW9uVVJMJywgJ0xvY2F0aW9uJywgJ0Rlc2NyaXB0aW9uJywgJ1dlYnNpdGUnLCAnRW1haWwnLCAnUGhvbmUnLCAnU3RhdHVzJywgJ0luZHVzdHJ5JywgJ1N0YWdlcycsICdDb21wYW55SW52ZXN0ZWQnXTsKICAgICAgICBjb25zb2xlLmxvZygnWyBnZXRDaGVja2VkUm93RGF0YXMgXSAnLCB0aGlzLiRyZWZzLnRhYmxlLmdldENoZWNrZWRSb3dEYXRhcygpKTsKICAgICAgICB2YXIgZGF0YSA9IHRoaXMuJHJlZnMudGFibGUuZ2V0Q2hlY2tlZFJvd0RhdGFzKCk7CiAgICAgICAgZGF0YS51bnNoaWZ0KGhlYWRlcnMpOwogICAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICAgIGNvbnNvbGUubG9nKF90eXBlb2YoZGF0YSkpOwogICAgICAgIHZhciBmaWxlTmFtZSA9ICdkb3dubG9hZCc7CiAgICAgICAgdmFyIGV4cG9ydFR5cGUgPSAnY3N2JzsKICAgICAgICBleHBvcnRGcm9tSlNPTih7CiAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgZmlsZU5hbWU6IGZpbGVOYW1lLAogICAgICAgICAgZXhwb3J0VHlwZTogZXhwb3J0VHlwZQogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBWdWVUYWJsZUR5bmFtaWM6IFZ1ZVRhYmxlRHluYW1pYwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0RGF0YWJhc2UoKTsKICB9Cn07"},{"version":3,"sources":["Table.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <vue-table-dynamic\n        ref=\"table\"\n        :params=\"params\"\n    >\n    </vue-table-dynamic>\n    <button class=\"button  is-dark\" @click=\"getData\">Get All Data PDF</button>\n    <button class=\"button  is-dark\" @click=\"getXLS\">Get All Data XLS</button>\n    <button class=\"button  is-dark\" @click=\"getXLSchecked\">Get Checked Data XLS</button>\n  </div>\n</template>\n\n<script>\nimport VueTableDynamic from 'vue-table-dynamic';\nimport EventService from '@/services/EventService.js';\nimport {jsPDF} from \"jspdf\";\nimport exportFromJSON from 'export-from-json';\n\nexport default {\n  name: 'TableFamilies',\n  data() {\n    return {\n      params: {\n        data: [\n          ['OrganizationName', 'OrganizationURL', 'Location', 'Description', \"Website\", \"Email\", \"Phone\", \"Status\", \"Industry\", \"Stages\", \"CompanyInvested\"],\n        ],\n        header: 'row',\n        border: true,\n        stripe: true,\n        height: 200,\n        enableSearch: true,\n        pagination: true,\n        pageSize: 10,\n        pageSizes: [5, 10, 20, 50],\n        sort: [0],\n        showCheck: true,\n        columnWidth: [{column: 0, width: 160}, {column: 1, width: 160}, {column: 2, width: 160}, {\n          column: 3,\n          width: 160\n        }, {column: 4, width: 160}, {column: 5, width: 160}, {column: 6, width: 160}, {\n          column: 7,\n          width: 160\n        }, {column: 8, width: 160},\n          {column: 9, width: 160}, {column: 10, width: 160}, {column: 11, width: 160},]\n\n      }\n    }\n  },\n  methods: {\n    getDatabase: async function () {\n      // // Get the access token from the auth wrapper\n      const accessToken = await this.$auth.getTokenSilently()\n      let data = await EventService.getData(accessToken);\n\n      let i = 1;\n      data.forEach(element => {\n        const row = Object.values(element);\n        row.shift();\n        this.params.data.splice(i, 0, row);\n        i++;\n      });\n    },\n\n    getData() {\n      const data = this.$refs.table.getData();\n\n      data.shift();\n      const someData = [];\n      const finalData = [];\n\n\n      data.forEach(element => {\n\n        const tempss = [{\n          OrganizationName: element[0],\n          OrganizationURL: element[1],\n          Location: element[2],\n          Description: element[3],\n          Website: element[4],\n          Email: element[5],\n          Phone: element[6],\n          Status: element[7],\n          Industry: element[8],\n          Stages: element[9],\n          CompanyInvested: element[10]\n        }];\n        // console.log(tempss)\n        someData.push(tempss);\n      });\n\n      //header - columns for the export of the pdf\n      const headers = [\n        'OrganizationName',\n        'OrganizationURL',\n        'Location',\n        'Description',\n        'Website',\n        'Email',\n        'Phone',\n        'Status',\n        'Industry',\n        'Stages',\n        'CompanyInvested'\n      ]\n\n      for (var i = 0; i < headers.length; i += 1) {\n        finalData.push(someData[i][0]);\n      }\n\n\n      const test = new jsPDF('landscape', 'px', [2600, 600]);\n\n      test.table(5, 1, finalData, headers, {autoSize: true, fontSize: 10, padding: 5, margins: 10})\n      console.log(\"data:\" + data);\n      test.save(\"ssss.pdf\");\n    },\n\n    getXLS() {\n      const data = this.$refs.table.getData();\n      const fileName = 'download'\n      const exportType = 'csv'\n\n      exportFromJSON({data, fileName, exportType});\n    },\n\n    getXLSchecked() {\n      if (this.$refs && this.$refs.table) {\n\n        const headers = ([\n          'OrganizationName',\n          'OrganizationURL',\n          'Location',\n          'Description',\n          'Website',\n          'Email',\n          'Phone',\n          'Status',\n          'Industry',\n          'Stages',\n          'CompanyInvested'\n        ]);\n\n        console.log('[ getCheckedRowDatas ] ', this.$refs.table.getCheckedRowDatas())\n\n        const data = this.$refs.table.getCheckedRowDatas();\n        data.unshift(headers);\n        console.log(data);\n        console.log(typeof data);\n        const fileName = 'download'\n        const exportType = 'csv'\n\n        exportFromJSON({data, fileName, exportType});\n      }\n\n    },\n  },\n\n  components: {VueTableDynamic},\n  created() {\n    this.getDatabase();\n  }\n\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}
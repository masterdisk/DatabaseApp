{"remainingRequest":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\devilbox\\data\\www\\dbapp\\src\\components\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\devilbox\\data\\www\\dbapp\\src\\components\\Table.vue","mtime":1621327657750},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1618480263168},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1618480262416},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1618480263168},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVUYWJsZUR5bmFtaWMgZnJvbSAndnVlLXRhYmxlLWR5bmFtaWMnOwppbXBvcnQgRXZlbnRTZXJ2aWNlIGZyb20gJ0Avc2VydmljZXMvRXZlbnRTZXJ2aWNlLmpzJzsKaW1wb3J0IHtqc1BERn0gZnJvbSAianNwZGYiOwppbXBvcnQgZXhwb3J0RnJvbUpTT04gZnJvbSAnZXhwb3J0LWZyb20tanNvbic7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1RhYmxlRmFtaWxpZXMnLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwYXJhbXM6IHsKICAgICAgICBkYXRhOiBbCiAgICAgICAgICBbJ09yZ2FuaXphdGlvbk5hbWUnLCAnT3JnYW5pemF0aW9uVVJMJywgJ0xvY2F0aW9uJywgJ0Rlc2NyaXB0aW9uJywgIldlYnNpdGUiLCAiRW1haWwiLCAiUGhvbmUiLCAiU3RhdHVzIiwgIkluZHVzdHJ5IiwgIlN0YWdlcyIsICJDb21wYW55SW52ZXN0ZWQiXSwKICAgICAgICBdLAogICAgICAgIGhlYWRlcjogJ3JvdycsCiAgICAgICAgYm9yZGVyOiB0cnVlLAogICAgICAgIHN0cmlwZTogdHJ1ZSwKICAgICAgICBoZWlnaHQ6IDIwMCwKICAgICAgICBlbmFibGVTZWFyY2g6IHRydWUsCiAgICAgICAgcGFnaW5hdGlvbjogdHJ1ZSwKICAgICAgICBwYWdlU2l6ZTogMTAsCiAgICAgICAgcGFnZVNpemVzOiBbNSwgMTAsIDIwLCA1MF0sCiAgICAgICAgc29ydDogWzBdLAogICAgICAgIHNob3dDaGVjazogdHJ1ZSwKICAgICAgICBjb2x1bW5XaWR0aDogW3tjb2x1bW46IDAsIHdpZHRoOiAxNjB9LCB7Y29sdW1uOiAxLCB3aWR0aDogMTYwfSwge2NvbHVtbjogMiwgd2lkdGg6IDE2MH0sIHsKICAgICAgICAgIGNvbHVtbjogMywKICAgICAgICAgIHdpZHRoOiAxNjAKICAgICAgICB9LCB7Y29sdW1uOiA0LCB3aWR0aDogMTYwfSwge2NvbHVtbjogNSwgd2lkdGg6IDE2MH0sIHtjb2x1bW46IDYsIHdpZHRoOiAxNjB9LCB7CiAgICAgICAgICBjb2x1bW46IDcsCiAgICAgICAgICB3aWR0aDogMTYwCiAgICAgICAgfSwge2NvbHVtbjogOCwgd2lkdGg6IDE2MH0sCiAgICAgICAgICB7Y29sdW1uOiA5LCB3aWR0aDogMTYwfSwge2NvbHVtbjogMTAsIHdpZHRoOiAxNjB9LCB7Y29sdW1uOiAxMSwgd2lkdGg6IDE2MH0sXQoKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0RGF0YWJhc2U6IGFzeW5jIGZ1bmN0aW9uICgpIHsKICAgICAgLy8gLy8gR2V0IHRoZSBhY2Nlc3MgdG9rZW4gZnJvbSB0aGUgYXV0aCB3cmFwcGVyCiAgICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gYXdhaXQgdGhpcy4kYXV0aC5nZXRUb2tlblNpbGVudGx5KCkKICAgICAgbGV0IGRhdGEgPSBhd2FpdCBFdmVudFNlcnZpY2UuZ2V0RGF0YShhY2Nlc3NUb2tlbik7CgogICAgICBsZXQgaSA9IDE7CiAgICAgIGRhdGEuZm9yRWFjaChlbGVtZW50ID0+IHsKICAgICAgICBjb25zdCByb3cgPSBPYmplY3QudmFsdWVzKGVsZW1lbnQpOwogICAgICAgIHJvdy5zaGlmdCgpOwogICAgICAgIHRoaXMucGFyYW1zLmRhdGEuc3BsaWNlKGksIDAsIHJvdyk7CiAgICAgICAgaSsrOwogICAgICB9KTsKICAgIH0sCgogICAgZ2V0RGF0YSgpIHsKICAgICAgY29uc3QgZGF0YSA9IHRoaXMuJHJlZnMudGFibGUuZ2V0RGF0YSgpOwoKICAgICAgZGF0YS5zaGlmdCgpOwogICAgICBjb25zdCBzb21lRGF0YSA9IFtdOwogICAgICBjb25zdCBmaW5hbERhdGEgPSBbXTsKCgogICAgICBkYXRhLmZvckVhY2goZWxlbWVudCA9PiB7CgogICAgICAgIGNvbnN0IHRlbXBzcyA9IFt7CiAgICAgICAgICBPcmdhbml6YXRpb25OYW1lOiBlbGVtZW50WzBdLAogICAgICAgICAgT3JnYW5pemF0aW9uVVJMOiBlbGVtZW50WzFdLAogICAgICAgICAgTG9jYXRpb246IGVsZW1lbnRbMl0sCiAgICAgICAgICBEZXNjcmlwdGlvbjogZWxlbWVudFszXSwKICAgICAgICAgIFdlYnNpdGU6IGVsZW1lbnRbNF0sCiAgICAgICAgICBFbWFpbDogZWxlbWVudFs1XSwKICAgICAgICAgIFBob25lOiBlbGVtZW50WzZdLAogICAgICAgICAgU3RhdHVzOiBlbGVtZW50WzddLAogICAgICAgICAgSW5kdXN0cnk6IGVsZW1lbnRbOF0sCiAgICAgICAgICBTdGFnZXM6IGVsZW1lbnRbOV0sCiAgICAgICAgICBDb21wYW55SW52ZXN0ZWQ6IGVsZW1lbnRbMTBdCiAgICAgICAgfV07CiAgICAgICAgLy8gY29uc29sZS5sb2codGVtcHNzKQogICAgICAgIHNvbWVEYXRhLnB1c2godGVtcHNzKTsKICAgICAgfSk7CgogICAgICAvL2hlYWRlciAtIGNvbHVtbnMgZm9yIHRoZSBleHBvcnQgb2YgdGhlIHBkZgogICAgICBjb25zdCBoZWFkZXJzID0gWwogICAgICAgICdPcmdhbml6YXRpb25OYW1lJywKICAgICAgICAnT3JnYW5pemF0aW9uVVJMJywKICAgICAgICAnTG9jYXRpb24nLAogICAgICAgICdEZXNjcmlwdGlvbicsCiAgICAgICAgJ1dlYnNpdGUnLAogICAgICAgICdFbWFpbCcsCiAgICAgICAgJ1Bob25lJywKICAgICAgICAnU3RhdHVzJywKICAgICAgICAnSW5kdXN0cnknLAogICAgICAgICdTdGFnZXMnLAogICAgICAgICdDb21wYW55SW52ZXN0ZWQnCiAgICAgIF0KCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaGVhZGVycy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgIGZpbmFsRGF0YS5wdXNoKHNvbWVEYXRhW2ldWzBdKTsKICAgICAgfQoKCiAgICAgIGNvbnN0IHRlc3QgPSBuZXcganNQREYoJ2xhbmRzY2FwZScsICdweCcsIFsyNjAwLCA2MDBdKTsKCiAgICAgIHRlc3QudGFibGUoNSwgMSwgZmluYWxEYXRhLCBoZWFkZXJzLCB7YXV0b1NpemU6IHRydWUsIGZvbnRTaXplOiAxMCwgcGFkZGluZzogNSwgbWFyZ2luczogMTB9KQogICAgICBjb25zb2xlLmxvZygiZGF0YToiICsgZGF0YSk7CiAgICAgIHRlc3Quc2F2ZSgic3Nzcy5wZGYiKTsKICAgIH0sCgogICAgZ2V0WExTKCkgewogICAgICBjb25zdCBkYXRhID0gdGhpcy4kcmVmcy50YWJsZS5nZXREYXRhKCk7CiAgICAgIGNvbnN0IGZpbGVOYW1lID0gJ2Rvd25sb2FkJwogICAgICBjb25zdCBleHBvcnRUeXBlID0gJ2NzdicKCiAgICAgIGV4cG9ydEZyb21KU09OKHtkYXRhLCBmaWxlTmFtZSwgZXhwb3J0VHlwZX0pOwogICAgfSwKCiAgICBnZXRYTFNjaGVja2VkKCkgewogICAgICBpZiAodGhpcy4kcmVmcyAmJiB0aGlzLiRyZWZzLnRhYmxlKSB7CgogICAgICAgIGNvbnN0IGhlYWRlcnMgPSAoWwogICAgICAgICAgJ09yZ2FuaXphdGlvbk5hbWUnLAogICAgICAgICAgJ09yZ2FuaXphdGlvblVSTCcsCiAgICAgICAgICAnTG9jYXRpb24nLAogICAgICAgICAgJ0Rlc2NyaXB0aW9uJywKICAgICAgICAgICdXZWJzaXRlJywKICAgICAgICAgICdFbWFpbCcsCiAgICAgICAgICAnUGhvbmUnLAogICAgICAgICAgJ1N0YXR1cycsCiAgICAgICAgICAnSW5kdXN0cnknLAogICAgICAgICAgJ1N0YWdlcycsCiAgICAgICAgICAnQ29tcGFueUludmVzdGVkJwogICAgICAgIF0pOwoKICAgICAgICBjb25zb2xlLmxvZygnWyBnZXRDaGVja2VkUm93RGF0YXMgXSAnLCB0aGlzLiRyZWZzLnRhYmxlLmdldENoZWNrZWRSb3dEYXRhcygpKQoKICAgICAgICBjb25zdCBkYXRhID0gdGhpcy4kcmVmcy50YWJsZS5nZXRDaGVja2VkUm93RGF0YXMoKTsKICAgICAgICBkYXRhLnVuc2hpZnQoaGVhZGVycyk7CiAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgY29uc29sZS5sb2codHlwZW9mIGRhdGEpOwogICAgICAgIGNvbnN0IGZpbGVOYW1lID0gJ2Rvd25sb2FkJwogICAgICAgIGNvbnN0IGV4cG9ydFR5cGUgPSAnY3N2JwoKICAgICAgICBleHBvcnRGcm9tSlNPTih7ZGF0YSwgZmlsZU5hbWUsIGV4cG9ydFR5cGV9KTsKICAgICAgfQoKICAgIH0sCiAgfSwKCiAgY29tcG9uZW50czoge1Z1ZVRhYmxlRHluYW1pY30sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0RGF0YWJhc2UoKTsKICB9Cgp9Cg=="},{"version":3,"sources":["Table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"Table.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <vue-table-dynamic\n        ref=\"table\"\n        :params=\"params\"\n    >\n    </vue-table-dynamic>\n    <button class=\"button  is-dark\" @click=\"getData\">Get All Data PDF</button>\n    <button class=\"button  is-dark\" @click=\"getXLS\">Get All Data XLS</button>\n    <button class=\"button  is-dark\" @click=\"getXLSchecked\">Get Checked Data XLS</button>\n  </div>\n</template>\n\n<script>\nimport VueTableDynamic from 'vue-table-dynamic';\nimport EventService from '@/services/EventService.js';\nimport {jsPDF} from \"jspdf\";\nimport exportFromJSON from 'export-from-json';\n\nexport default {\n  name: 'TableFamilies',\n  data() {\n    return {\n      params: {\n        data: [\n          ['OrganizationName', 'OrganizationURL', 'Location', 'Description', \"Website\", \"Email\", \"Phone\", \"Status\", \"Industry\", \"Stages\", \"CompanyInvested\"],\n        ],\n        header: 'row',\n        border: true,\n        stripe: true,\n        height: 200,\n        enableSearch: true,\n        pagination: true,\n        pageSize: 10,\n        pageSizes: [5, 10, 20, 50],\n        sort: [0],\n        showCheck: true,\n        columnWidth: [{column: 0, width: 160}, {column: 1, width: 160}, {column: 2, width: 160}, {\n          column: 3,\n          width: 160\n        }, {column: 4, width: 160}, {column: 5, width: 160}, {column: 6, width: 160}, {\n          column: 7,\n          width: 160\n        }, {column: 8, width: 160},\n          {column: 9, width: 160}, {column: 10, width: 160}, {column: 11, width: 160},]\n\n      }\n    }\n  },\n  methods: {\n    getDatabase: async function () {\n      // // Get the access token from the auth wrapper\n      const accessToken = await this.$auth.getTokenSilently()\n      let data = await EventService.getData(accessToken);\n\n      let i = 1;\n      data.forEach(element => {\n        const row = Object.values(element);\n        row.shift();\n        this.params.data.splice(i, 0, row);\n        i++;\n      });\n    },\n\n    getData() {\n      const data = this.$refs.table.getData();\n\n      data.shift();\n      const someData = [];\n      const finalData = [];\n\n\n      data.forEach(element => {\n\n        const tempss = [{\n          OrganizationName: element[0],\n          OrganizationURL: element[1],\n          Location: element[2],\n          Description: element[3],\n          Website: element[4],\n          Email: element[5],\n          Phone: element[6],\n          Status: element[7],\n          Industry: element[8],\n          Stages: element[9],\n          CompanyInvested: element[10]\n        }];\n        // console.log(tempss)\n        someData.push(tempss);\n      });\n\n      //header - columns for the export of the pdf\n      const headers = [\n        'OrganizationName',\n        'OrganizationURL',\n        'Location',\n        'Description',\n        'Website',\n        'Email',\n        'Phone',\n        'Status',\n        'Industry',\n        'Stages',\n        'CompanyInvested'\n      ]\n\n      for (var i = 0; i < headers.length; i += 1) {\n        finalData.push(someData[i][0]);\n      }\n\n\n      const test = new jsPDF('landscape', 'px', [2600, 600]);\n\n      test.table(5, 1, finalData, headers, {autoSize: true, fontSize: 10, padding: 5, margins: 10})\n      console.log(\"data:\" + data);\n      test.save(\"ssss.pdf\");\n    },\n\n    getXLS() {\n      const data = this.$refs.table.getData();\n      const fileName = 'download'\n      const exportType = 'csv'\n\n      exportFromJSON({data, fileName, exportType});\n    },\n\n    getXLSchecked() {\n      if (this.$refs && this.$refs.table) {\n\n        const headers = ([\n          'OrganizationName',\n          'OrganizationURL',\n          'Location',\n          'Description',\n          'Website',\n          'Email',\n          'Phone',\n          'Status',\n          'Industry',\n          'Stages',\n          'CompanyInvested'\n        ]);\n\n        console.log('[ getCheckedRowDatas ] ', this.$refs.table.getCheckedRowDatas())\n\n        const data = this.$refs.table.getCheckedRowDatas();\n        data.unshift(headers);\n        console.log(data);\n        console.log(typeof data);\n        const fileName = 'download'\n        const exportType = 'csv'\n\n        exportFromJSON({data, fileName, exportType});\n      }\n\n    },\n  },\n\n  components: {VueTableDynamic},\n  created() {\n    this.getDatabase();\n  }\n\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}
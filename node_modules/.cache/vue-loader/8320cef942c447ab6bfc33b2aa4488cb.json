{"remainingRequest":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\devilbox\\data\\www\\dbapp\\src\\components\\EventsList.vue?vue&type=style&index=0&id=65806807&lang=scss&scoped=true&","dependencies":[{"path":"C:\\devilbox\\data\\www\\dbapp\\src\\components\\EventsList.vue","mtime":1616681065616},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\devilbox\\data\\www\\dbapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmV2ZW50cyB7CiAgbWFyZ2luLXRvcDogMTAwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Cg=="},{"version":3,"sources":["EventsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA","file":"EventsList.vue","sourceRoot":"src/components","sourcesContent":["<!-- EventList re-usable component(row of EventSingle) -->\n<template>\n  <div class=\"events container\">\n    <h2 class=\"subtitle is-3\">Check out our upcoming events</h2>\n    <div class=\"columns is-multiline\">\n      <div v-for=\"event in events\" :key=\"event.id\" :event=\"event\" class=\"column is-one-quarter\">\n        <router-link :to=\"`/event/${event.id}`\">\n          <EventCard :event=\"event\"/>\n        </router-link>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport EventCard from \"@/components/EventCard\";\nimport EventService from '@/services/EventService.js';\n\nexport default {\n  name: \"EventsList\",\n  components: {\n    EventCard\n  },\n  data() {\n    return {\n      event: {},\n      events: []\n    };\n  },\n  created() {\n    this.getEventsData(); // call getEventData() when the instance is created\n  },\n  methods: {\n    async getEventsData() {\n      // Use the eventService to call the getEvents() method\n      EventService.getEvents()\n          .then(\n              (events => {\n                this.$set(this, \"events\", events);\n              }).bind(this)\n          );\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.events {\n  margin-top: 100px;\n  text-align: center;\n}\n</style>\n"]}]}
import { assert, isArray, normalizeFileName } from './utils';
import { downloadFile } from './processors';
import { _prepareData, _createJSONData, createCSVData, createXLSData, createXMLData, _createFieldsMapper } from './converters';
function exportFromJSON({ data, fileName = 'download', fileNameFormatter = name => name.replace(/\s+/, '_'), fields, exportType = 'txt', replacer = null, space = 4, processor = downloadFile, withBOM = false, delimiter = ',', beforeTableEncode = (i) => i }) {
    const MESSAGE_IS_ARRAY_FAIL = 'Invalid export data. Please provide an array of object';
    const MESSAGE_UNKNOWN_EXPORT_TYPE = `Can't export unknown data type ${exportType}.`;
    const fieldsMapper = _createFieldsMapper(fields);
    const safeData = fieldsMapper(_prepareData(data));
    const JSONData = _createJSONData(safeData, replacer, space);
    switch (exportType) {
        case 'txt': {
            return processor(JSONData, exportType, normalizeFileName(fileName, 'txt', fileNameFormatter));
        }
        case 'json': {
            return processor(JSONData, exportType, normalizeFileName(fileName, 'json', fileNameFormatter));
        }
        case 'csv': {
            assert(isArray(safeData), MESSAGE_IS_ARRAY_FAIL);
            const BOM = '\ufeff';
            const CSVData = createCSVData(safeData, delimiter, beforeTableEncode);
            const content = withBOM ? BOM + CSVData : CSVData;
            return processor(content, exportType, normalizeFileName(fileName, 'csv', fileNameFormatter));
        }
        case 'xls': {
            assert(isArray(safeData), MESSAGE_IS_ARRAY_FAIL);
            const content = createXLSData(safeData, beforeTableEncode);
            return processor(content, exportType, normalizeFileName(fileName, 'xls', fileNameFormatter));
        }
        case 'xml': {
            const content = createXMLData(safeData);
            return processor(content, exportType, normalizeFileName(fileName, 'xml', fileNameFormatter));
        }
        default:
            throw new Error(MESSAGE_UNKNOWN_EXPORT_TYPE);
    }
}
(function (exportFromJSON) {
    exportFromJSON.types = {
        txt: 'txt',
        json: 'json',
        csv: 'csv',
        xls: 'xls',
        xml: 'xml',
    };
    exportFromJSON.processors = { downloadFile };
})(exportFromJSON || (exportFromJSON = {}));
export default exportFromJSON;
